{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["Form","inputText","setInputText","setTodos","todos","setStatus","status","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","setFilteredTodos","useEffect","getLocalTodos","localStorage","setItem","JSON","stringify","filterHandler","getItem","todoLocal","parse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7af4788e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Form = ({inputText, setInputText, setTodos, todos, status, setStatus}) => {\r\n    \r\n \r\n  const inputTextHandler  = (e) => {\r\n      setInputText(e.target.value)\r\n  }\r\n\r\n  const submitTodoHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(inputText === '') return;\r\n    \r\n\r\n\r\n    setTodos([\r\n      ...todos, {text: inputText, completed: false, id: Math.random() * 1000}\r\n    ])\r\n    setInputText(\"\")\r\n  }\r\n\r\n\r\n  const statusHandler = (e) => {\r\n      setStatus(e.target.value)\r\n      \r\n } \r\n  \r\n  return ( \r\n    <form >\r\n      <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n     );\r\n}\r\n \r\nexport default Form;","import React from 'react'\r\n\r\n\r\nconst Todo = ({text, todo, todos, setTodos}) => {\r\n\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter(el => el.id !== todo.id  ))\r\n    }\r\n\r\n    const completeHandler = () => {\r\n        setTodos(todos.map(item => {\r\n            if(item.id === todo.id){\r\n                return {\r\n                    ...item, completed: !item.completed\r\n                }\r\n            }\r\n            return item\r\n        }))\r\n    }\r\n\r\n\r\n    return ( \r\n       <div className=\"todo\">\r\n           <li className={`todo-item ${todo.completed ? \"completed\" : ''}`}>{text}</li>\r\n           <button onClick={completeHandler} className=\"complete-btn\" ><i className=\"fas fa-check\"></i></button>\r\n           <button onClick={deleteHandler} className=\"trash-btn\"><i className=\"fas fa-trash\"></i></button>\r\n       </div> \r\n     );\r\n}\r\n \r\nexport default Todo;","\r\nimport React from 'react';\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = ({todos, setTodos, filteredTodos}) => {\r\n    return ( \r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {filteredTodos.map(todo => (\r\n                    <Todo \r\n                    todos={todos} \r\n                    setTodos={setTodos} \r\n                    key={todo.id} \r\n                    todo={todo}\r\n                    text={todo.text} \r\n                    \r\n                    /> ))}\r\n            </ul>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default TodoList;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos]= useState([]);\n\n\n\n\n  useEffect(() =>{\n    getLocalTodos()\n  }, [])\n  \n  useEffect(() =>{\n    const saveLocalTodos = () => {\n      localStorage.setItem('todos', JSON.stringify(todos))\n    }\n    const filterHandler = () => {\n      switch (status) {\n        case \"completed\":\n          setFilteredTodos(todos.filter(todo => todo.completed === true))\n          break;\n        case  \"uncompleted\":\n          setFilteredTodos(todos.filter(todo => todo.completed === false))\n          break;\n        default:\n          setFilteredTodos(todos)\n          break;     \n      }\n    }\n\n\n  saveLocalTodos()\n  filterHandler();\n  }, [todos,status])\n  \n  //save to localstorage\n\n\n  const getLocalTodos = () =>{\n    if(localStorage.getItem('todos') === null){\n      localStorage.setItem('todos', JSON.stringify([]))\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem('todos'))\n      setTodos(todoLocal)\n    }\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>ToDo LIST</h1>\n      </header>\n      <Form \n       todos={todos} \n       setTodos={setTodos}\n       inputText={inputText} \n       setInputText={setInputText}\n       setStatus={setStatus}\n       status={status}\n       />\n\n      <TodoList \n      filteredTodos={filteredTodos} \n      todos={todos} \n      setTodos={setTodos} \n      />\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}